name: Build & Release Plugin

on:
  push:
    branches:
      - main
    tags:
      - 'v*' # Triggers when a version tag (e.g., v1.0.1) is pushed
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build
      - name: Get Git Tag
        id: get_version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "VERSION=dev-build" >> $GITHUB_ENV
          fi

      - name: Package Plugin with Version
        run: npm run package && mv dist/infinity-gallery.zip dist/infinity-gallery-${{ env.VERSION }}.zip

      - name: Upload Plugin ZIP as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: infinity-gallery-${{ env.VERSION }}
          path: dist/infinity-gallery-${{ env.VERSION }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && github.actor == 'LoganRickert' # Only you can trigger releases
  
    permissions:
      contents: write  # Restrict token to writing releases only
  
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
  
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: infinity-gallery
          path: dist/

      - name: Get Tag Message
        id: tag_message
        run: |
         MESSAGE=$(git for-each-ref --format='%(contents)' "refs/tags/${{ github.ref_name }}")
         echo "MESSAGE<<EOF" >> $GITHUB_ENV
         echo "$MESSAGE" >> $GITHUB_ENV
         echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Infinity Gallery ${{ github.ref_name }}
          body: "${{ env.MESSAGE || 'New release of Infinity Gallery ðŸŽ‰' }}"
          draft: false
          prerelease: false
          files: dist/infinity-gallery-${{ env.VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
